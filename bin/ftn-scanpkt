#!/usr/bin/python

import os
import sys
import optparse

import fidonet

def parse_args():
    p = optparse.OptionParser()
    p.add_option('-m', '--show-messages', action='store_true')
    return p.parse_args()

def main():
    opts, args = parse_args()

    pkt = fidonet.PacketFactory(fd=open(args.pop(0)))

    print '=' * 70
    print '%(origZone)s:%(origNet)s/%(origNode)s ->' % pkt,
    print '%(destZone)s:%(destNet)s/%(destNode)s' % pkt,
    print '@ %(year)s-%(month)s-%(day)s %(hour)s:%(minute)s:%(second)s' % pkt
    print '=' * 70
    print

    if opts.show_messages:
        count = 0
        while True:
            try:
                msg = fidonet.Message.parse(pkt.messages.val)
                print '[%03d]' % count,
                print 'From: %(fromUsername)s @ %(origNet)s/%(origNode)s' % msg
                print '      To: %(toUsername)s @ %(destNet)s/%(destNode)s' % msg
                print '      Subject: %(subject)s' % msg
                print '      Flags:',
                for k,v in msg.attributeWord.val.items():
                    if v.val:
                        print k.upper(),
                print
                count += 1
            except fidonet.EndOfData:
                break

if __name__ == '__main__':
    main()

